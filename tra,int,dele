traversing
1. [INITIALIZATION] SET I= lower_bound.
2. Repeat Steps 3 to 4 while I<= upper_bound.
3. Apply Process to A [I].
4. SET I = I+1 [END OF LOOP].
5. EXIT.

CODE:-
#include <stdio.h> 
int main()
{ int i, n, arr[20]; 
printf("\n Enter the number of elements in the array : ");
scanf("%d", &n);
for(i=0; i<n; i++)
{ 
    printf("\n arr[%d] = ", i);
    scanf ("%d",&arr[i]); 
}
printf("\n The array elements are ");
for(i=0;i<n;i++)  
    printf("\t %d", arr[i]);
return 0;
 }

insertion
1.	Upper bound(UB)=k
2.	Repeat step 3 while k>=LB
3.	A[K+1]=A[K]
       K=K+1;
4.	LB=Data
5.	Stop

CODE:-
#include <stdio.h>
#define MAX 5
void main() {
   int array[MAX] = {6, 8, 5, 2};
   int N = 4;       
   int i = 0;     
   int value = 1;    
   printf("Printing array before insertion :\n");
   for(i = 0; i < N; i++) {
      printf("array[%d] = %d \n", i, array[i]);
   }
   for(i = N; i >= 0; i--)
   {
      array[i+1] = array[i];
   }
   array[0] = value;
   N++;
   printf("Printing array after insertion :\n");
   for(i = 0; i < N; i++) {
      printf("array[%d] = %d\n", i, array[i]);
   }
}

deletion:-
1.	If UB=0, then print underflow and exit
Else
2.	K=LB
3.	Repeat step 4 k<UB
4.	A[K]=A[K+1]
K=K+1
5.	A[UB]=NULL
      UB=UB-1
6.	Exist.

CODE:-
#include<stdio.h>
    int main(){
    int arr[50];
    int n,pos;
    printf("Enter size of an array \n");
    scanf("%d", &n);
    for(int i=0;i<n;i++)
    {
        printf("Enter the value of %d th element \n", (i+1));
        scanf("%d", &arr[i]);
    }
    printf("Enter the position to delete element \n");
    scanf("%d", &pos);
    n--;
    for(int j=pos;j<=n;j++)
    {
        arr[j-1]=arr[j];
    }
    printf("Array after deletion is \n");
    for(int k=0;k<n;k++){
         printf("%d \n", arr[k]);
    }
    return 0;
}

